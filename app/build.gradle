apply plugin: 'com.android.application'

def cfg = rootProject.ext.configuration // 配置
def libs = rootProject.ext.libraries // 库

android {
    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion
    defaultConfig {
        applicationId cfg.package
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionName cfg.version_name
        multiDexEnabled true
    }

    signingConfigs {
        release {
//            try {
                storeFile file("../app/keystore.jks")
                storePassword KEYSTORE_PASSWORD
                keyAlias key_Alias
                keyPassword KEY_PASSWORD
//            }
//            catch (ex) {
//                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
//            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "LOG_DEBUG", "false"
            signingConfig signingConfigs.release
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

//    productFlavors {
//        dev {
//            minSdkVersion  21
//        }
//        prod {
//            minSdkVersion  14
//        }
//    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

repositories {
    maven { url "https://jitpack.io" }
}



dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:multidex:1.0.1'
    compile "com.android.support:support-v4:${libs.supportVersion}"
    compile "com.android.support:appcompat-v7:${libs.supportVersion}"
    compile "com.android.support:design:${libs.supportVersion}"
    compile "com.android.support:cardview-v7:${libs.supportVersion}"
    compile "com.android.support:recyclerview-v7:${libs.supportVersion}"
    //    compile "com.android.support:palette-v7:${libs.supportVersion}"
//    compile "com.jakewharton:butterknife:${libs.butterknife}"
    compile 'com.jakewharton:butterknife:8.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.1.0'
    // 资源注入
    compile "com.github.bumptech.glide:glide:${libs.glide}"
    // 图片处理
    compile "jp.wasabeef:recyclerview-animators:${libs.recycler_animators}"
    // Recycler动画
    compile "de.hdodenhof:circleimageview:${libs.circleimageview}"
    // 头像视图
    //    compile "com.asha.nightowllib:nightowllib:${libs.nightowllib}"//夜间模式
    compile 'com.github.zhaokaiqiang.klog:library:1.4.0'
    compile 'com.orhanobut:logger:1.15'
    // AndroidSwipeLayout 侧滑删除
    compile 'com.daimajia.swipelayout:library:1.2.0@aar'
    compile(name: 'roundedimageview-2.2.1', ext: 'aar')
    //    compile 'com.makeramen:roundedimageview:2.2.1'
    compile project(':ptr-lib')
//    compile project(':okhttputils2')
    compile 'com.zhy:okhttputils:2.6.2'

    compile 'co.lujun:androidtagview:1.0.3'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.apkfuns.logutils:library:1.4.2'
    //内存泄漏
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'

    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.4.7'
    compile 'com.jrummyapps:html-builder:1.0.0'//
    compile 'com.blankj:utilcode:1.5.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.1'
}

repositories {
    flatDir {
        dirs 'libs'
    }
}
//task hello << {
//    println 'Hello world!'
//}
//task intro(dependsOn: hello) << {
//    println "I'm Gradle"
//}
//4.times { counter ->
//    task "task$counter" << {
//        println "I'm task number $counter"
//    }
//}
//task0.dependsOn task2, task3

//defaultTasks 'clean1', 'run'
//task clean << {
//    println 'Default Cleaning!'
//}
//task run << {
//    println 'Default Running!'
//}
//task other << {
//    println "I'm not a default task!"
//}