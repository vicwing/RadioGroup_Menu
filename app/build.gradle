apply plugin: 'com.android.application'

def cfg = rootProject.ext.configuration // 配置
def libs = rootProject.ext.dependencies // 库

android {
    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion
    defaultConfig {
        applicationId cfg.package
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionName cfg.version_name
        multiDexEnabled true
    }

    signingConfigs {
        release {
//            try {
            storeFile file("../app/keystore.jks")
            storePassword KEYSTORE_PASSWORD
            keyAlias key_Alias
            keyPassword KEY_PASSWORD
//            }
//            catch (ex) {
//                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
//            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "LOG_DEBUG", "false"
            signingConfig signingConfigs.release
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
//            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    productFlavors {
//        dev {
//            minSdkVersion  21
//        }
//        prod {
//            minSdkVersion  14
//        }
//    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

repositories {
    maven { url "https://jitpack.io" }
}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
//    implementation project(':ptr-lib')
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.android.support:support-v4:${libs.supportVersion}"
    implementation "com.android.support:appcompat-v7:${libs.supportVersion}"
    implementation "com.android.support:design:${libs.supportVersion}"
    implementation "com.android.support:cardview-v7:${libs.supportVersion}"
    implementation "com.android.support:recyclerview-v7:${libs.supportVersion}"
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation "com.github.bumptech.glide:glide:${libs.glide}"
    implementation "jp.wasabeef:recyclerview-animators:${libs.recycler_animators}"
    implementation "de.hdodenhof:circleimageview:${libs.circleimageview}"
    implementation 'com.orhanobut:logger:1.15'
    implementation 'com.daimajia.swipelayout:library:1.2.0@aar'
    implementation 'com.zhy:okhttputils:2.6.2'

    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.apkfuns.logutils:library:1.4.2'
    //内存泄漏
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
    implementation 'com.jrummyapps:html-builder:1.0.0'//
    implementation 'com.blankj:utilcode:1.5.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

    //Retrofit和Rxjava
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'io.reactivex:rxjava:1.3.8'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.squareup.retrofit2:retrofit-adapters:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.4.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'

}
